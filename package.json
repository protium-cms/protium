{
  "name": "protium",
  "version": "0.0.1",
  "author": "Jon Jaques <jaquers@gmail.com>",
  "license": "MIT",
  "private": true,
  "dependencies": {
    "@types/react": "^16.7.18",
    "@types/react-native": "^0.57.25",
    "lerna": "^3.8.0",
    "patch-package": "^5.1.1",
    "postinstall-postinstall": "^2.0.0",
    "rimraf": "^2.6.2"
  },
  "devDependencies": {
    "@types/enzyme": "^3.1.15",
    "@types/enzyme-adapter-react-16": "^1.0.3",
    "@types/jest": "^23.3.11",
    "enzyme": "^3.8.0",
    "enzyme-adapter-react-16": "^1.7.1",
    "husky": "^1.3.1",
    "jest": "^23.6.0",
    "jest-junit": "^5.2.0",
    "ts-jest": "^23.10.5",
    "tslint": "^5.12.0",
    "tslint-junit-formatter": "^5.1.0",
    "typescript-formatter": "^7.2.2"
  },
  "engines": {
    "node": ">=10",
    "yarn": ">=1.7"
  },
  "resolutions": {
    "lodash": "4.17.10",
    "react-devtools-core": "3.4.2"
  },
  "scripts": {
    "clean": "rimraf \"report*.xml\" \"coverage\" \"packages/**/lib\"",
    "clean-modules": "find . -name 'node_modules' -type d -prune -exec rm -rf '{}' +",
    "bootstrap": "yarn && lerna bootstrap",
    "build": "lerna run build && lerna run build:web",
    "build-image": "yarn clean && docker build --no-cache .",
    "build-ci-image": "docker build -f ci.Dockerfile -t registry.gitlab.com/protium-network/protium/ci-runner .",
    "push-ci-image": "docker push registry.gitlab.com/protium-network/protium/ci-runner:latest",
    "dev": "lerna run dev --parallel",
    "format": "tsfmt -r",
    "lint": "tslint -c tslint.json 'packages/**/*.{ts,tsx}'",
    "lint:fix": "yarn lint --fix",
    "lint:ci": "tslint --formatters-dir node_modules/tslint-junit-formatter/formatters --format junit --out report-lint.xml -c tslint.json 'packages/**/*.{ts,tsx}'",
    "start": "lerna run start --parallel",
    "test": "jest",
    "test:ci": "JEST_JUNIT_OUTPUT='./report-unit-tests.xml' JEST_SUITE_NAME='Unit Tests' jest --ci --coverage --reporters=default --reporters=jest-junit",
    "release": "echo 'disabled for now'",
    "release:debug": "helm install --name test --devel --dry-run --debug ./chart",
    "postinstall": "patch-package",
    "typecheck": "lerna exec \"tsc --noEmit\" --parallel",
    "validate": "yarn clean && yarn lint && yarn typecheck && yarn test"
  },
  "workspaces": {
    "packages": [
      "packages/*"
    ]
  }
}
