image: $CI_REGISTRY/$CI_PROJECT_PATH/ci-runner:latest
services:
  - docker:dind

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  CACHE_KEY: $CI_COMMIT_REF_SLUG
  GCLOUD_IMAGE: $GCLOUD_REGISTRY/$CI_PROJECT_PATH
  CONTAINER_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH
  CONTAINER_TEST_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH:latest

cache:
  key: $CACHE_KEY
  paths:
    - ".jest/"
    - "node_modules/"
    - "packages/api/node_modules/"
    - "packages/app/node_modules/"
    - "packages/assets/node_modules/"
    - "packages/cli/node_modules/"
    - "packages/config/node_modules/"
    - "packages/native/node_modules/"
    - "packages/serve/node_modules/"
    - "packages/web/node_modules/"

stages:
  - setup
  - test
  - build
  - deploy

"Install Dependencies":
  stage: setup
  script:
    - yarn ci:bootstrap

"Audit Dependencies":
  allow_failure: true
  stage: test
  cache:
    key: $CACHE_KEY
    paths:
      - "node_modules/"
      - "packages/api/node_modules/"
      - "packages/app/node_modules/"
      - "packages/assets/node_modules/"
      - "packages/cli/node_modules/"
      - "packages/config/node_modules/"
      - "packages/native/node_modules/"
      - "packages/serve/node_modules/"
      - "packages/web/node_modules/"
    policy: pull
  script:
    - yarn audit

"Lint":
  allow_failure: true
  stage: test
  cache:
    key: $CACHE_KEY
    policy: pull
    paths:
      - "node_modules/"
  script:
    - yarn ci:lint
  artifacts:
    reports:
      junit: report-lint.xml

"Unit Tests":
  stage: test
  script:
    - yarn ci:test
  cache:
    key: $CACHE_KEY
    paths:
      - ".jest"
      - "node_modules/"
      - "packages/api/node_modules/"
      - "packages/app/node_modules/"
      - "packages/assets/node_modules/"
      - "packages/cli/node_modules/"
      - "packages/config/node_modules/"
      - "packages/native/node_modules/"
      - "packages/serve/node_modules/"
      - "packages/web/node_modules/"
  artifacts:
    reports:
      junit: report-unit-tests.xml

"Build Application":
  stage: build
  script:
    - yarn build
  cache:
    key: $CACHE_KEY
    policy: pull
    paths:
      - "node_modules/"
      - "packages/api/node_modules/"
      - "packages/app/node_modules/"
      - "packages/assets/node_modules/"
      - "packages/cli/node_modules/"
      - "packages/config/node_modules/"
      - "packages/native/node_modules/"
      - "packages/serve/node_modules/"
      - "packages/web/node_modules/"
  artifacts:
    paths:
      - packages/assets/lib/report.html
      - packages/assets/lib/stats.json

"Build Image":
  stage: deploy
  cache:
    key: $CACHE_KEY
    policy: pull
    paths:
      - "node_modules/"
  before_script:
    - echo $GCLOUD_SERVICE_KEY > $HOME/gcloud-service-key.json
    - echo $CI_JOB_TOKEN > $HOME/.ci-job-token
    - docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY < $HOME/.ci-job-token
    - docker login -u _json_key --password-stdin $GCLOUD_REGISTRY < $HOME/gcloud-service-key.json
    - gcloud auth activate-service-account --key-file $HOME/gcloud-service-key.json
  script:
    - yarn clean
    - docker pull $CONTAINER_RELEASE_IMAGE
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $GCLOUD_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
    - docker push $GCLOUD_IMAGE
  only:
    refs:
      - master
